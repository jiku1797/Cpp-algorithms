#include <vector>

using ull = unsigned long long;

ull exp_sum(unsigned int n) 
{
  std::vector<int> parts(n);
  int k = 0;
  parts[k] = n;
  int count{0};
  
  while(true) 
  {
    ++count;
    int rem_val{0};
    while(k >= 0 && parts[k] == 1) 
    {
      rem_val += parts[k];
      --k;
    }
    if(k < 0)
       break;
    
    --parts[k];
    ++rem_val;
    
    while(rem_val > parts[k]) 
    {
       parts[k+1] = parts[k];
       rem_val -= parts[k];
       ++k;
    }
      parts[k+1] = rem_val;
      ++k;
  }
  
  return count;
}
